# Add issue to the Project (beta) board if they are not there yet.
#
# Project (beta) is called ProjectNext in GraphQL API.
#
# Based on PR management example in GH docs page.
# @see https://docs.github.com/en/issues/trying-out-the-new-projects-experience/automating-projects
#
# Note: GITHUB_TOKEN does not have the necessary scopes to access projects (beta).
# You must create a token with org:write scope and save it as a secret in your repository or organization.
# This workflow assumes the token is stored as organisation (or repository) secret GH_ACTIONS_TOKEN.
# @see https://docs.github.com/en/issues/trying-out-the-new-projects-experience/automating-projects#introduction
# @see https://docs.github.com/en/graphql/guides/forming-calls-with-graphql#authenticating-with-graphql

name: 'Add issues to project'
description: 'Add new issues to project'
inputs:
  token:
    description: "Github token"
    required: true
  organization:
    description: "Project's organization"
    required: false
    default: "Yleisradio"
  project-id:
    description: "Id of the GH project"
    required: true
  target-column:
    description: "Kanban board target column for the issues"
    required: false
  issue-id:
    description: "Id of the new issue"
    required: true
runs:
  using: composite
  steps:
    - name: Get project and field data
      id: requesting_project_data
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        ORGANIZATION: ${{ inputs.organization }}
        PROJECT_NUMBER: ${{ inputs.project-id }}
        TARGET_COLUMN: ${{ inputs.target-column }}
        ISSUE_ID: ${{ inputs.issue-id }}
      shell: bash
      run: $GITHUB_ACTION_PATH/issues_to_project.sh
